# Task 8: K-Means Clustering with Mall Customers Dataset

# Step 1: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score
import warnings
warnings.filterwarnings('ignore')

# Step 2: Load the dataset
data = pd.read_excel("Mall_Customers.csv.xls")  # Use pd.read_csv if the file is actually CSV
display(data.head())

# Step 3: Basic EDA
data.info()
data.describe()
sns.pairplot(data[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']])

# Step 4: Feature selection
X = data[['Annual Income (k$)', 'Spending Score (1-100)']]

# Step 5: Scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 6: Elbow method to find optimal K
inertias = []
for k in range(1, 11):
    km = KMeans(n_clusters=k, random_state=42)
    km.fit(X_scaled)
    inertias.append(km.inertia_)

plt.plot(range(1, 11), inertias, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.grid(True)
plt.show()

# Step 7: Fit final KMeans model
k = 5  # Based on elbow plot
kmeans = KMeans(n_clusters=k, random_state=42)
clusters = kmeans.fit_predict(X_scaled)
data['Cluster'] = clusters

# Step 8: Visualization
plt.figure(figsize=(8, 5))
sns.scatterplot(x='Annual Income (k$)', y='Spending Score (1-100)', hue='Cluster', data=data, palette='Set1')
plt.title('Customer Segments')
plt.show()

# Step 9: Silhouette Score
score = silhouette_score(X_scaled, clusters)
print(f"Silhouette Score: {score:.3f}")
